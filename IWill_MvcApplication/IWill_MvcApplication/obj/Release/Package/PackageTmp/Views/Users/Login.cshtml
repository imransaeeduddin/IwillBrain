
@model IWill_MvcApplication.Models.LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <meta charset="UTF-8" />
    <!-- <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">  -->
    <title>Login and Registration Form with HTML5 and CSS3</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Login and Registration Form with HTML5 and CSS3" />
    <meta name="keywords" content="html5, css3, form, switch, animation, :target, pseudo-class" />
    <meta name="author" content="Codrops" />
    <link rel="shortcut icon" href="../favicon.ico">

    <link href="~/LoginCss/demo.css" rel="stylesheet" />
    <link href="~/LoginCss/animate-custom.css" rel="stylesheet" />
    <link href="~/LoginCss/style.css" rel="stylesheet" />

    <script type="text/javascript" language=javascript>


        function OpenGoogleLoginPopup() {


            var url = "https://accounts.google.com/o/oauth2/auth?";
            url += "scope=https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email&";
            url += "state=%2Fprofile&"
            url += "redirect_uri=@IWill_MvcApplication.Models.Helper.Return_url" + "&"
            url += "response_type=token&"
            url += "client_id=@IWill_MvcApplication.Models.Helper.Client_ID";
            //alert(url);
            window.location = url;
        }


    </script>
    <style>
        .LinkedInLoginImage a {
            background: url('../../Images/LoginImages/imgLinkedInLogin.png') no-repeat;
            display: block;
            background-size: 200px 40px;
            width: 200px;
            height: 50px;
            text-indent: -9999px; /* hides the link text */
            cursor: pointer;
        }

        .GoogleLoginImage > a {
            background: url('../../Images/LoginImages/imgGoogleLogin.png') no-repeat;
            display: block;
            background-size: 200px 40px;
            width: 200px;
            height: 50px;
            text-indent: -9999px;
            cursor: pointer;
        }

        .TwitterLoginImage > a {
            background: url('../../Images/LoginImages/imgLoginTwitter.png') no-repeat;
            display: block;
            background-size: 200px 40px;
            width: 200px;
            height: 50px;
            text-indent: -9999px; /* hides the link text */
            cursor: pointer;
        }

        .FacebookLoginImage a {
            background: url('../../Images/LoginImages/imgFacebookLogin.png') no-repeat;
            display: block;
            background-size: 200px 40px;
            width: 200px;
            height: 50px;
            text-indent: -9999px;
            cursor: pointer;
        }
    </style>
</head>


<div class="container">

    <header>
        <h1>User Login </h1>

    </header>
    <section>
        <div id="container_demo">

            <a class="hiddenanchor" id="toregister"></a>
            <a class="hiddenanchor" id="tologin"></a>
            <div id="wrapper">
                <div id="login" class="animate form">
                    @using (Html.BeginForm("DoLogIn", "Users", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <h1>Log in</h1>
                        <p>
                            <label for="username" class="uname" data-icon="u"> Your email or username </label>
                            @*@Html.LabelFor(model => model.Email, new { @class="uname", @data_icon="u"})*@
                            @Html.TextBoxFor(model => model.Email, new { @placeholder = "myusername or mymail@mail.com", @id = "txtEmail", @name = "username", @onchange = "OnEmailBlur()" })

                            <div style="color:red">
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div style="display:none" id="loading">Email checking<img src="~/Images/loading.gif" style="width:30px;height:30px" /></div>
                            <div style="color:red; font-size:12px; display:none" id="EmailErrorMessage"></div>
                        </p>
                        <p>
                            <label for="password" class="youpasswd" data-icon="p"> password </label>
                            @Html.TextBoxFor(model => model.Password, new { @placeholder = "eg. X8df!90EO", @type = "password", @id = "password", @name = "password" })
                            <div style="color:red">

                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </p>



                        <div style="float: left; width: 49%">
                            <p class="keeplogin">

                                @Html.CheckBoxFor(model => model.LoggedIn, new { id = "employmentType_1" })
                                <label for="loginkeeping">Keep me logged in</label>
                            </p>
                        </div>
                        <div style="float: left; width: 49%">
                            <p class="keeplogin">
                                <a href="~/Users/ForgetEmail">Forget Password </a>
                            </p>
                        </div>
                        <div style="clear:both"></div>
                        <div>
                            @*<div class="FacebookLoginImage">@Html.ActionLink("Log in by Facebook", "Facebook", "Users")</div>

                                <div class="FacebookLoginImage">@Html.ActionLink("Log in by Twitter", "Twitter", "Users")</div>*@

                            <div class="FacebookLoginImage">
                                <a href="/Users/Facebook" class="button " id="FacebookLoginImage"></a>
                            </div>
                            <div class="TwitterLoginImage">
                                <a href="/Users/Twitter" class="button " id="TwitterLoginImage"></a>
                            </div>
                            <div class="GoogleLoginImage">
                                <a href="#" class="button" id="GoogleLoginImage" onclick="OpenGoogleLoginPopup();"></a>
                            </div>
                            <div class="LinkedInLoginImage">
                                <a href="/Users/LinkedIn" class="button" id="LinkedInLoginImage"></a>
                            </div>
                            @*<div class="LinkedInLoginImage">
                                    <div>@Html.ActionLink("Log in by LinkedIn", "LinkedIn", "Users", new { })</div>
                                </div>*@
                        </div>


                        <div>
                            <p class="login button">
                                <input type="submit" value="Login" onclick="return SubmitValidateEmail()" />
                            </p>
                        </div>
                        <div style="float:left">
                            @{ if (ViewData["Error"]!= null)
                                {
                                    if (TempData["Error"].ToString().IndexOf("Error:") == 0)
                                    {
                                        <h5 style="color:red"> @TempData["Error"].ToString() </h5>

                                        <script>
                                            //$("#password").css("background", "#c46d96");
                                            //$("#password").css("color", "white");
                                            //$("#password").val('');
                                            $("#password").focus();
                                        </script>
                                    }
                                    else
                                    {
                                        <h5 style="color:green"> @TempData["Error"].ToString() </h5>
                                    }
                                }
                            }

                        </div>
                        <div style="clear:both"></div>

                                }

                </div>



            </div>
        </div>
    </section>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>


    function SubmitValidateEmail() {
        var Display = $("#EmailErrorMessage").css("display");
        if (Display == "inline" || Display == "block") {
            $("#txtEmail").focus();
            return false;
        }
        //$("#btnsubmit").attr("disabled", false);
        if (OnEmailBlur())
            return true;
        return false;


    }
    function OnEmailBlur() {


        $("#loading").show();
        $("#EmailErrorMessage").hide();
        $("#txtEmail").css("background", "");
        $("#txtEmail").css("color", "");

        var id = $('#txtEmail').val().trim();


        if (id.length == 0) {
            $("#EmailErrorMessage").show();
            $("#EmailErrorMessage").html('Email address Required');

            $("#loading").hide();

            return false;
        }
        var pattern = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,6})?$/;
        if (pattern.test(id) == true) {
            var obj = {
                id: $('#txtEmail').val().trim()
            }

            $.ajax({
                url: "/Users/IsEmailRegistered",
                type: 'GET',


                data: { id: id },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data == 'no') {

                        $("#txtEmail").css("background", "#c46d96");
                        $("#txtEmail").css("color", "white");
                        $("#EmailErrorMessage").html('Invalid Email, it is not registered');
                        $("#EmailErrorMessage").show();
                        return false;
                    }


                    $("#loading").hide();

                },
                error: function (ex) {
                    $("#loading").hide();
                    alert(ex.responseText);
                    return false;
                }

            });
        }
        else {
            $("#EmailErrorMessage").html('invalid Email address');
            $("#EmailErrorMessage").show();
            $("#loading").hide();
            return false;
        }
        $("#loading").hide();
        return true;
    }
</script>